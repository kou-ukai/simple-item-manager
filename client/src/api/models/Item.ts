/* tslint:disable */
/* eslint-disable */
/**
 * 簡易物品管理WebAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Footprint,
    FootprintFromJSON,
    FootprintFromJSONTyped,
    FootprintToJSON,
} from './';

/**
 * 物品
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 物品ID
     * @type {number}
     * @memberof Item
     */
    id?: number;
    /**
     * 物品名
     * @type {string}
     * @memberof Item
     */
    name?: string;
    /**
     * 物品写真
     * @type {Blob}
     * @memberof Item
     */
    image?: Blob;
    /**
     * 使用中のユーザID
     * @type {string}
     * @memberof Item
     */
    userId?: string;
    /**
     * 作成日時
     * @type {Date}
     * @memberof Item
     */
    createdAt?: Date;
    /**
     * 作成者ID
     * @type {string}
     * @memberof Item
     */
    createdBy?: string;
    /**
     * 更新日時
     * @type {Date}
     * @memberof Item
     */
    updatedAt?: Date;
    /**
     * 更新者ID
     * @type {string}
     * @memberof Item
     */
    updatedBy?: string;
}

export function ItemFromJSON(json: any): Item {
    return ItemFromJSONTyped(json, false);
}

export function ItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Item {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'updatedBy': !exists(json, 'updatedBy') ? undefined : json['updatedBy'],
    };
}

export function ItemToJSON(value?: Item | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'image': value.image,
        'userId': value.userId,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'createdBy': value.createdBy,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'updatedBy': value.updatedBy,
    };
}

